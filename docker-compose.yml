services:
  adminer:
    image: adminer
    container_name: tr3_adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - tr3_network

  mongodb:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - tr3_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 3

  mongo-express:
    image: mongo-express
    container_name: tr3_mongo_express
    ports:
      - "8081:8081"
    env_file:
      - ./back/environment/.env  # Carga las variables del archivo .env
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: "${MONGO_USER}"
      ME_CONFIG_BASICAUTH_PASSWORD: "${MONGO_PASSWORD}"
      ME_CONFIG_MONGODB_AUTH_DATABASE: "${MONGO_DB}"  # Base de datos para autenticaci칩n
      ME_CONFIG_MONGODB_AUTH_USERNAME: "${MONGO_USER}"  # Expande correctamente la variable
      ME_CONFIG_MONGODB_AUTH_PASSWORD: "${MONGO_PASSWORD}"  # Expande correctamente la variable
      ME_CONFIG_MONGODB_SERVER: mongo  # Nombre del contenedor MongoDB

    restart: unless-stopped
    depends_on:
      - mongodb
    networks:
      - tr3_network

  frontend:
    build:
      context: ./front
      dockerfile: dev.Dockerfile
    container_name: tr3_frontend
    restart: always
    ports:
      - "4000:4000"
    volumes:
      - ./front/vuetify-project:/app/frontend
      - /app/frontend
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - tr3_network

  backend:
    build:
      context: ./back
      dockerfile: dockerImage/dev.Dockerfile
    container_name: tr3_backend
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./back:/app/backend
      - ./back/environment/.env:/app/backend/environment/.env
    depends_on:
      mongodb:
        condition: service_healthy  # <- A침adir condici칩n de salud
    networks:
      - tr3_network

networks:
  tr3_network:  # Definici칩n de la red
    driver: bridge
volumes:
  mysql_data:
  mongo_data:
